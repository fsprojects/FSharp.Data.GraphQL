name: publish to GitHub

on:
  push:
    branches:
      - dev

jobs:
  build:

    env:
      GITHUB_TOKEN: '${{secrets.GITHUB_TOKEN}}'

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1

    - name: Add GitHub Packges NuGet source
      run: dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/fsprojects/index.json"

    - name: Set version
      run: sed -i "s|<Version>\(.*\)</Version>|<Version>\1-ci-$GITHUB_RUN_ID</Version>|" Directory.Build.targets

    - name: Pack FSharp.Data.GraphQL.Shared project and push to GitHub Packages
      run: |
        cd src/FSharp.Data.GraphQL.Shared
        dotnet pack --nologo --configuration Release /p:IsNuget=true -o ../../nuget
        dotnet nuget push ../../nuget/*Shared*.nupkg -s "github" -k $GITHUB_TOKEN

    - name: Pack FSharp.Data.GraphQL.Client project and push to GitHub Packages
      run: |
        cd src/FSharp.Data.GraphQL.Client
        dotnet pack --nologo --configuration Release /p:IsNuget=true -o ../../nuget
        dotnet nuget push ../../nuget/*Client*.nupkg -s "github" -k $GITHUB_TOKEN

    - name: Pack FSharp.Data.GraphQL.Server project and push to GitHub Packages
      run: |
        cd src/FSharp.Data.GraphQL.Server
        dotnet pack --nologo --configuration Release /p:IsNuget=true -o ../../nuget
        dotnet nuget push ../../nuget/*Server*.nupkg -s "github" -k $GITHUB_TOKEN

    - name: Pack FSharp.Data.GraphQL.Server.Middleware project and push to GitHub Packages
      run: |
        cd src/FSharp.Data.GraphQL.Server.Middleware
        dotnet pack --nologo --configuration Release /p:IsNuget=true -o ../../nuget
        dotnet nuget push ../../nuget/*Server.Middleware*.nupkg -s "github" -k $GITHUB_TOKEN
