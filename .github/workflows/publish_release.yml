name: publish to NuGet

on:
  push:
    branches:
      - master

jobs:
  publish:

    env:
      SOURCE: '"nuget.org"'
      KEY: '${{secrets.NUGET_SECRET}}'

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
    - name: Pack and push to NuGet FSharp.Data.GraphQL.Shared project
      if: startsWith(github.ref, 'refs/tags/release')
      run: |
        cd src/FSharp.Data.GraphQL.Shared
        dotnet pack --nologo --configuration Release /p:IsNuget=true -o ../../nuget
        dotnet nuget push nuget/*Shared*.nupkg -s $SOURCE -k $KEY
    - name: Pack and push to NuGet FSharp.Data.GraphQL.Client project
      if: startsWith(github.ref, 'refs/tags/release')
      run: |
        cd src/FSharp.Data.GraphQL.Client
        dotnet pack --nologo --configuration Release /p:IsNuget=true -o ../../nuget
        dotnet nuget push nuget/*Client*.nupkg -s $SOURCE -k $KEY
    - name: Pack and push to NuGet FSharp.Data.GraphQL.Server project
      if: startsWith(github.ref, 'refs/tags/release')
      run: |
        cd src/FSharp.Data.GraphQL.Server
        dotnet pack --nologo --configuration Release /p:IsNuget=true -o ../../nuget
        dotnet nuget push nuget/*Server*.nupkg -s $SOURCE -k $KEY
    - name: Pack and push to NuGet FSharp.Data.GraphQL.Server.Middleware project
      if: startsWith(github.ref, 'refs/tags/release')
      run: |
        cd src/FSharp.Data.GraphQL.Server.Middleware
        dotnet pack --nologo --configuration Release /p:IsNuget=true -o ../../nuget
        dotnet nuget push nuget/*Server.Middleware*.nupkg -s $SOURCE -k $KEY
